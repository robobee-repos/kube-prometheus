/*
 * Optional:
 * 
 * vars.prometheus.limits.cpu
 * vars.prometheus.limits.memory
 * vars.prometheus.requests.cpu
 * vars.prometheus.requests.memory
 * vars.prometheus.affinity.key
 * vars.prometheus.affinity.name
 * vars.prometheus.affinity.required
 * vars.prometheus.allowOnMaster
 * vars.prometheus.tolerations[].key
 * vars.prometheus.tolerations[].effect
 * vars.prometheus.tolerations[].value
 */

import "robobeerun-templates/_affinities.stg"
import "robobeerun-templates/_resources.stg"
import "robobeerun-templates/_tolerations.stg"

/*
 *
 */
prometheus-prometheus-yaml(parent, vars) ::= <<
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: k8s
  name: k8s
  namespace: monitoring
spec:
  alerting:
    alertmanagers:
    - name: alertmanager-main
      namespace: monitoring
      port: web
  baseImage: quay.io/prometheus/prometheus
  nodeSelector:
    beta.kubernetes.io/os: linux
  replicas: <vars.prometheus.replicas>
  <resourcesGroup(parent, vars, vars.prometheus)>
  ruleSelector:
    matchLabels:
      prometheus: k8s
      role: alert-rules
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  version: v2.7.2
  <tolerationMasterGroup(parent, vars, vars.prometheus.allowOnMaster)>
  <tolerationsGroup(parent, vars, vars.prometheus.tolerations, vars.prometheus.allowOnMaster)>
  <affinitiesGroup(parent, vars, vars.prometheus.affinity)>

>>
